{"version":3,"file":"4.6d6ad36a79bd1267707e.hot-update.js","sources":["webpack:///../node_modules/truffle-contract/index.js","webpack:///client/web3/provider.js"],"sourcesContent":["var Schema = require(\"truffle-contract-schema\");\nvar Contract = require(\"./contract.js\");\n\nvar contract = function(options) {\n  var binary = Schema.normalize(options || {});\n\n  // Note we don't use `new` here at all. This will cause the class to\n  // \"mutate\" instead of instantiate an instance.\n  return Contract.clone(binary);\n};\n\nmodule.exports = contract;\n\nif (typeof window !== \"undefined\") {\n  window.TruffleContract = contract;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/truffle-contract/index.js\n// module id = ../node_modules/truffle-contract/index.js\n// module chunks = 4","import Web3 from \"web3\"\nimport contract from \"truffle-contract\"\n\nconst provider = () => {\n    //if the user has MetaMask:\n    if (typeof web3 != 'undefined'){\n        return web3.currentProvider\n    } else {\n        console.error(\"You need to install Metamask for this app to work!\")\n    }\n}\n\nexport const eth = new Web3(provider()).eth\n\nexport const getInstance = artifact => {\n    const contractObj = contract(artifact)\n    contractObj.setProvider(provider())\n\n    return contractObj.deployed();\n}\n\n\n// WEBPACK FOOTER //\n// client/web3/provider.js"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;A","sourceRoot":""}