{"version":3,"file":"4.cb17fc2c210b246dfeb1.hot-update.js","sources":["webpack:///client/pages/index.js","webpack:///client/web3/provider.js"],"sourcesContent":["import { eth, getInstance } from \"../web3/provider\"\nimport UserStorage from \"../web3/artifacts/UserStorage.json\"\n\nexport default class IndexPage extends React.Component {\n\n    async componentDidMount(){\n        const addresses = await eth.getAccounts()\n        console.log(addresses)\n\n        const balance = await eth.getBalance(addresses[0])\n        console.log(balance)\n\n        console.log(UserStorage)\n\n        const storage = await getInstance(UserStorage)\n        const [_id,username] = await storage.profiles.call(1)\n        console.log(\"Got username:\",username)\n\n    }\n    render(){\n        return(\n            <h1>hello world!</h1>\n        )\n    }\n}\n\n\n// WEBPACK FOOTER //\n// client/pages/index.js","import Web3 from \"web3\"\nimport contract from \"truffle-contract\"\n\nconst provider = () => {\n    //if the user has MetaMask:\n    if (typeof web3 != 'undefined'){\n        return web3.currentProvider\n    } else {\n        console.error(\"You need to install Metamask for this app to work!\")\n    }\n}\n\nexport const eth = new Web3(provider()).eth\n\nexport const getInstance = artifact => {\n    const contractObj = contract(artifact)\n    contractObj.setProvider(provider())\n\n    return contractObj.deployed();\n}\n\n\n// WEBPACK FOOTER //\n// client/web3/provider.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;AAEA;;AAEA;AACA;;AADA;;AACA;AACA;;;;AADA;AAAA;AACA;AACA;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AApBA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;A","sourceRoot":""}