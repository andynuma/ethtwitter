{"version":3,"file":"4.d48fdb86c6b7db0be9d2.hot-update.js","sources":["webpack:///client/web3/provider.js","webpack:///client/web3/users.js"],"sourcesContent":["import Web3 from \"web3\"\nimport contract from \"truffle-contract\"\n\nconst provider = () => {\n    //if the user has MetaMask:\n    if (typeof web3 != 'undefined'){\n        return web3.currentProvider\n    } else {\n        console.error(\"You need to install Metamask for this app to work!\")\n    }\n}\n\nexport const eth = new Web3(provider()).eth\n\nexport const getInstance = artifact => {\n    const contractObj = contract(artifact)\n    contractObj.setProvider(provider())\n\n    return contractObj.deployed();\n}\n\n\n// WEBPACK FOOTER //\n// client/web3/provider.js","import {eth , getInstance} from \"./provider\"\nimport Userstorage from \"./artifacts/UserStorage.json\"\n\nexport const getUserInfo = async(userId) => {\n    const storage = await getInstance(Userstorage)\n    const profile = await storage.profiles.call(userId)\n\n    return profile\n}\n\nexport const createUser = async(username) => {\n    const controller = await getInstance(UserController)\n    const addresess = await eth.getAccounts()\n\n    const result = await controller.createUser(\n        username,\n        {\n            from: addresses[0],\n        })\n    return result\n}\n\n\n// WEBPACK FOOTER //\n// client/web3/users.js"],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AAOA;AADA;AACA;AAPA;AAIA;AAJA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}